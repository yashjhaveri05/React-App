{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yashj\\\\OneDrive\\\\Desktop\\\\react_crash\\\\weatherApp\\\\weatherapp\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  const APP_KEY = \"d9f018ab094f5f7a34df0ec41f79c368\";\n  const [search, setSearch] = useState(\"\");\n  const [weather, setWeather] = useState([]);\n  const [query, setQuery] = useState(\"Mumbai\");\n  useEffect(() => {\n    getWeather();\n  }, [query]);\n\n  const getWeather = async () => {\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${query}&units=metric&appid=${APP_KEY}`);\n    const data = await response.json();\n    setWeather(data);\n    console.log(data);\n  };\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day}, ${date} ${month}, ${year}`;\n  };\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: getSearch,\n    className: \"search-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"search-bar\",\n    type: \"text\",\n    value: search,\n    onChange: updateSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"search-button\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Search\")), typeof weather.main != \"undefined\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 35\n    }\n  }, dateBuilder(new Date()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 39\n    }\n  }, weather.name)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 18\n    }\n  }, \"Latitude:\", weather.coord.lat, \",Longitude:\", weather.coord.lon))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, Math.round(weather.main.temp), \"\\xB0C\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"temp-extra\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, \"Feels like:\", Math.round(weather.main.feels_like), \"\\xB0C\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, \"Temp_Max: \", Math.round(weather.main.temp_max), \"\\xB0C  |  Temp_Min: \", Math.round(weather.main.temp_min), \"\\xB0C\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"humidity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 39\n    }\n  }, \"Humidity: \", weather.main.humidity, \"%\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, weather.weather[0].main))) : ''));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/yashj/OneDrive/Desktop/react_crash/weatherApp/weatherapp/src/App.js"],"names":["React","useEffect","useState","App","APP_KEY","search","setSearch","weather","setWeather","query","setQuery","getWeather","response","fetch","data","json","console","log","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","updateSearch","e","target","value","getSearch","preventDefault","main","Date","name","coord","lat","lon","Math","round","temp","feels_like","temp_max","temp_min","humidity"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAMC,OAAO,GAAG,kCAAhB;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,QAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACF,KAAD,CAFM,CAAT;;AAIA,QAAME,UAAU,GAAG,YAAW;AAC5B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qDAAoDJ,KAAM,uBAAsBL,OAAQ,EAA1F,CAA5B;AACA,UAAMU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAP,IAAAA,UAAU,CAACM,IAAD,CAAV;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,GALD;;AAOA,QAAMI,WAAW,GAAIC,CAAD,IAAO;AACzB,QAAIC,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CAAb;AACA,QAAIC,IAAI,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE,CAAX;AAEA,QAAIC,GAAG,GAAGD,IAAI,CAACF,CAAC,CAACI,MAAF,EAAD,CAAd;AACA,QAAIC,IAAI,GAAGL,CAAC,CAACM,OAAF,EAAX;AACA,QAAIC,KAAK,GAAGN,MAAM,CAACD,CAAC,CAACQ,QAAF,EAAD,CAAlB;AACA,QAAIC,IAAI,GAAGT,CAAC,CAACU,WAAF,EAAX;AAEA,WAAQ,GAAEP,GAAI,KAAIE,IAAK,IAAGE,KAAM,KAAIE,IAAK,EAAzC;AACD,GAVD;;AAYA,QAAME,YAAY,GAAGC,CAAC,IAAI;AACxBzB,IAAAA,SAAS,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAGH,CAAC,IAAI;AACrBA,IAAAA,CAAC,CAACI,cAAF;AACAzB,IAAAA,QAAQ,CAACL,MAAD,CAAR;AACAC,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAM,IAAA,QAAQ,EAAE4B,SAAhB;AAA2B,IAAA,SAAS,EAAC,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAE7B,MAHT;AAIE,IAAA,QAAQ,EAAEyB,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAkC,IAAA,IAAI,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CADD,EAYG,OAAOvB,OAAO,CAAC6B,IAAf,IAAuB,WAAxB,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKlB,WAAW,CAAC,IAAImB,IAAJ,EAAD,CAAhB,CAAtB,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK9B,OAAO,CAAC+B,IAAb,CAA1B,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAc/B,OAAO,CAACgC,KAAR,CAAcC,GAA5B,iBAA4CjC,OAAO,CAACgC,KAAR,CAAcE,GAA1D,CAAL,CAHF,CADF,eAME;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,CAACC,KAAL,CAAWpC,OAAO,CAAC6B,IAAR,CAAaQ,IAAxB,CADH,UADF,eAIE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBF,IAAI,CAACC,KAAL,CAAWpC,OAAO,CAAC6B,IAAR,CAAaS,UAAxB,CAAhB,UADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAeH,IAAI,CAACC,KAAL,CAAWpC,OAAO,CAAC6B,IAAR,CAAaU,QAAxB,CAAf,0BAAmEJ,IAAI,CAACC,KAAL,CAAWpC,OAAO,CAAC6B,IAAR,CAAaW,QAAxB,CAAnE,UAFF,CAJF,eAQE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAexC,OAAO,CAAC6B,IAAR,CAAaY,QAA5B,MAA1B,CARF,eASE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BzC,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmB6B,IAA7C,CATF,CANF,CADD,GAmBM,EA/BR,CADD,CADF;AAqCD,CA7ED;;AA+EA,eAAejC,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\n\nconst App = () => {\n  const APP_KEY = \"d9f018ab094f5f7a34df0ec41f79c368\";\n\n  const [search, setSearch] = useState(\"\");\n  const [weather, setWeather] = useState([]);\n  const [query, setQuery] = useState(\"Mumbai\");\n\n  useEffect(() => {\n    getWeather();\n  }, [query]);\n\n  const getWeather = async() => {\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${query}&units=metric&appid=${APP_KEY}`);\n    const data = await response.json();\n    setWeather(data);\n    console.log(data);\n  }\n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day}, ${date} ${month}, ${year}`\n  }\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n     <main>\n      <form onSubmit={getSearch} className=\"search-form\">\n        <input\n          className=\"search-bar\"\n          type=\"text\"\n          value={search}\n          onChange={updateSearch}\n        />\n        <button className=\"search-button\" type=\"submit\">\n          Search\n        </button>\n      </form>\n      {(typeof weather.main != \"undefined\") ? (\n        <div>\n          <div className=\"location-box\">\n            <div className=\"date\"><h1>{dateBuilder(new Date())}</h1></div>\n            <div className=\"location\"><h1>{weather.name}</h1></div>\n            <div><h3>Latitude:{weather.coord.lat},Longitude:{weather.coord.lon}</h3></div>\n          </div>\n          <div className=\"weather-box\">\n            <div className=\"temp\">\n              {Math.round(weather.main.temp)}°C\n            </div>\n            <div className=\"temp-extra\">\n              <h2>Feels like:{Math.round(weather.main.feels_like)}°C</h2>\n              <h3>Temp_Max: {Math.round(weather.main.temp_max)}°C  |  Temp_Min: {Math.round(weather.main.temp_min)}°C</h3>\n            </div>\n            <div className=\"humidity\"><h1>Humidity: {weather.main.humidity}%</h1></div>\n            <div className=\"weather\">{weather.weather[0].main}</div>\n          </div>\n        </div>\n        ) : ('')}\n     </main>\n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}